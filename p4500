#!/usr/bin/python -B

import os
import sys

# Local modules
import config
import utils
import comparator
import normalize


def check_args():
  """Checks the command line arguments.

  Prints a message to standard error if the arguments are incorrect.

  Returns:
    True if the arguments are correct; otherwise False.
  """
  if (len(sys.argv) != 5 or
      not (sys.argv[1] == '-f' and
           sys.argv[3] == '-f' and
           os.path.isfile(sys.argv[2]) and
           os.path.isfile(sys.argv[4]))):
    sys.stderr.write('ERROR Usage: {0} -f <path> -f <path>\n'
                     .format(sys.argv[0]))
    return False
  return True

def main():
  if not check_args():
    sys.exit(1)
  file1 = sys.argv[2]
  file2 = sys.argv[4]

  # Returns a file path, "/tmp/newfile.wav"
  if utils.is_mp3(file1):
    file1 = normalize.mp3_to_wav(file1)
  if utils.is_mp3(file2):
    file2 = normalize.mp3_to_wav(file2)

  if not (utils.is_wave(file1) and utils.is_wave(file2)):
    sys.stderr.write(
      'ERROR Usage: input files must be of MP3 or WAVE format\n')
    sys.exit(1)
  audio_file1 = normalize.normalize_wave_file(file1)
  audio_file2 = normalize.normalize_wave_file(file2)
  # ffts1 = normalize.get_ffts(audio_file1)
  # ffts2 = normalize.get_ffts(audio_file2)

  (fft1, ceps1) = normalize.get_mfcc(audio_file1)
  (fft2, ceps2) = normalize.get_mfcc(audio_file2)

  match = comparator.compare(ceps1, ceps2) or \
      comparator.compare(fft1, fft2)
  if match:
    print "MATCH"
  else:
    print "NO MATCH"


if __name__ == '__main__':
  main()
